Ansible Playbook 
The "ansible-playbook-windows-template" can be leveraged to perform any automation task on the Windows Servers using a domain service account to perform the WinRM authentication. 
 
group_vars↓ 
           all↓ 
               main.yml↓ 
                           ansible_ssh_user: username@EXAMPLE.COM 
                           ansible_ssh_pass: "{{ vault_username_password }}" 
                           ansible_ssh_port: 5986 
                           ansible_connection: winrm 
               vault.yml↓ 
                         ---
                         vault_username_password: ****************** 
 
** ansible-vault create ~/path/to/group_vars/all/vault.yml to encrypt the vault.yml 
 
Jenkins Settings: 
Use the secret text to bind the credential to two variables used in the script. 
 
 Build Environment (select "Use secret text(s) or file(s)")
 
 Binding:
        Secret text
               Variable: ANSIBLE_WINRM
               Credentials: (select Specific crediatial radio button) ANSIBLE_WINRM
        Secret text
               Variable: ANSIBLE_WINRM_PASSWD
               Credentials: (select Specific crediatial radio button) ANSIBLE_WINRM_PASSWD 
Build 
    
    Execute Shell 
 
      echo $ANSIBLE_WINRM_PASSWD | env KRB5_CONFIG=/etc/krb5.config kinit $ANSIBLE_WINRM
      cd ${WORKSPACE}/roles
      
      if using galaxy to run various playbook
      ansible-galaxy install -r ${WORKSPACE}/roles/requirements.yml -p ${WORKSPACE}/roles -f --ignore-errors
     
      if [ $? -ne 0 ]; then
        echo "ansible-galaxy couldnt install needful roles"
        exit 1
      fi
 
 
 
Server Configuration 
If a new Jenkins Slave Node and/or Ansible Server is provisioned, create the following config files to the new jenkins, slave node and the Ansible server: 
               /etc/krb5.config  #This is a cutom file
               /etc/Login.conf 
               /etc/samba/smb.conf 
 *sudo chmod 644 <file>     
Then run the following commands on all Jenkins and Ansible servers : 
           net ads join -U username@EXAMPLE.COM 
           net ads join -U <ansible server name>@EXAMPLE.COM 
           net ads join createupn="host/<ansible server name>@EXAMPLE.COM" -U username@AZURE.NOMS.ROOT 
           net ads keytab list #To check the server is added to the list 
           ktutil 
           ktutil: addent -password -p username@EXAMPLE.COM -k 1 -e rc4-hmac 
           Password for username@EXAMPLE.COM: [enter your password] 
           ktutil: addent -password -p username@EXAMPLE.COM -k 1 -e aes256-cts 
           Password for username@EXAMPLE.COM: [enter your password] 
           ktutil: wkt username.keytab 
           ktutil: quit 
*** username@EXAMPLE.COM must at least have installation rights and be part of the UNIX Group. 
 
 
New Domain Controller:  
If a new Domain controllers is commissioned, amend the following: 
/etc/krb5.config file with the new DC server name 
           [realms] 
           EXAMPLE.COM= { 
           kdc = <DCcname>.EXAMPLE.COM 
           admin_server = <DCcname>.EXAMPLE.COM 
           } 
      2.   /etc/samba/smb.conf 
           [global] 
           Line .... password server = <DCcname>.EXAMPLE.COM 
      3.  /etc/Login.conf 
           replace all lines with: principal="HTTP/<DCcname>@EXAMPLE.COM" 
 
 
/etc/krb5.config 
############################# 
#   /etc/samba/smb.conf     # 
############################# 
 
[global] 
        workgroup = AZURE 
        security = user 
        passdb backend = tdbsam 
        printing = cups 
        printcap name = cups 
        load printers = yes 
        cups options = raw 
        client signing = yes 
        client use spnego = yes 
        kerberos method = secrets and keytab 
        log file = /var/log/samba/%m.log 
        password server = <DCcname>.EXAMPLE.COM 
        realm = EXAMPLE.COM 
        security = ads 
 
[homes] 
        comment = Home Directories 
        valid users = %S, %D%w%S 
        browseable = No 
        read only = No 
        inherit acls = Yes 
 
[printers] 
        comment = All Printers 
        path = /var/tmp 
        printable = Yes 
        create mask = 0600 
        browseable = No 
 
[print$] 
        comment = Printer Drivers 
        path = /var/lib/samba/drivers 
        write list = root 
        create mask = 0664 
        directory mask = 0775 
 
 
#################### 
# /etc/krb5.config # 
#################### 
[logging] 
default = FILE:/var/log/krb5libs.log 
kdc = FILE:/var/log/krb5kdc.log 
admin_server = FILE:/var/log/kadmind.log 
 
[libdefaults] 
default_realm = EXAMPLE.COM 
ticket_lifetime = 24h 
renew_lifetime = 7d 
dns_lookup_realm = true 
dns_lookup_kdc = true 
ticket_lifetime = 24h 
renew_lifetime = 7d 
rdns = false 
forwardable = false 
default_ccache_name = KEYRING:persistent:%{uid} 
default_tgs_enctypes = arcfour-hmac-md5 des-cbc-crc des-cbc-md5 
default_tkt_enctypes = arcfour-hmac-md5 des-cbc-crc des-cbc-md5 
 
[realms] 
AZURE.NOMS.ROOT = { 
kdc = <DCcname>.EXAMPLE.COM 
admin_server = <DCcname>.EXAMPLE.COM 
} 
 
[domain_realm] 
.azure.noms.root = EXAMPLE.COM 
azure.noms.root = EXAMPLE.COM 
 

################### 
# /etc/login.conf # 
################### 

Kerberos { 
  com.sun.security.auth.module.Krb5LoginModule required 
  principal="HTTP/<DCcname>.EXAMPLE.COM" 
  doNotPrompt="false" 
  useTicketCache="false" 
  useKeyTab="true" 
  keyTab="/etc/krb5.keytab"; 
}; 
 
spnego-client { 
  com.sun.security.auth.module.Krb5LoginModule required; 
}; 
 
spnego-server { 
  com.sun.security.auth.module.Krb5LoginModule required 
  isInitiator="false" 
  useKeyTab="true" 
  keyTab="/etc/krb5.keytab" 
  principal="HTTP/<DCcname>.EXAMPLE.COM 
  tryFirstPass="true" 
  storePass="true" 
  storeKey="true"; 
}; 
 
com.sun.security.jgss.initiate { 
  com.sun.security.auth.module.Krb5LoginModule required 
  principal="HTTP/<DCcname>.EXAMPLE.COM" 
  useKeyTab="true" 
  keyTab="/etc/krb5.keytab"; 
}; 
 
com.sun.security.jgss.accept { 
  com.sun.security.auth.module.Krb5LoginModule required 
  principal="HTTP/<DCcname>.EXAMPLE.COM" 
  useKeyTab="true" 
  keyTab="/etc/krb5.keytab"; 
}; 
 
…...................................................................................................... 
 
 
 
